name: prep
description: prep
author: cole
inputs:
  tailscaleAuthkey:
    description: 'tailscale authkey'
    required: true
  maybeSkipInit:
    description: 'set to SKIP to maybe skip init'
    required: false
    default: 'no'
runs:
  using: composite
  steps:
    - { "name": "Tailscale", "uses": "tailscale/github-action@v1", "with": { "authkey": "${{ inputs.tailscaleAuthkey }}" } }
    - { "uses": "cachix/install-nix-action@v14", "with": {"install_url": "https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install","extra_nix_config": "experimental-features = nix-command flakes ca-references\n" } }
    - name: shell-out
      id: shell-out
      shell: bash
      run: echo "::set-output name=outpath::$(nix eval --raw '.#devShellSrc')"
    - name: shell-cache
      id: shell-cache
      uses: actions/cache@v2
      with:
        path: ./.nixcache/${{ steps.shell-out.outputs.outpath }}
        key: ${{ steps.shell-out.outputs.outpath }}
    - name: load-shell
      shell: bash
      run: |
        if [[ -d ./.nixcache ]]; then
          nix copy --no-check-sigs --from ./.nixcache/${{ steps.shell-out.outputs.outpath }} "${{ steps.shell-out.outputs.outpath }}"
          touch ./.nixcache/${{ steps.shell-out.outputs.outpath }}-loaded
        fi
    - name: "init"
      shell: bash
      run: |
        if [[ "${{ inputs.maybeSkipInit }}" == "SKIP" && -d ./.nixcache ]]; then
          exit 0
        fi
        .github/exec __init
    - name: save-shell
      shell: bash
      run: |
        set -x
        if [[ ! -d ./.nixcache/${{ steps.shell-out.outputs.outpath }}-loaded ]]; then
          time nix build "${{ steps.shell-out.outputs.outpath }}"
          nix copy --no-check-sigs --to ./.nixcache/${{ steps.shell-out.outputs.outpath }} "${{ steps.shell-out.outputs.outpath }}"
        fi
