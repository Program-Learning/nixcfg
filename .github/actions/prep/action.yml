name: prep
description: prep
author: cole
inputs:
  tailscaleAuthkey:
    description: 'tailscale authkey'
    required: true
runs:
  using: composite
  steps:
    - { "name": "Tailscale", "uses": "tailscale/github-action@v1", "with": { "authkey": "${{ inputs.tailscaleAuthkey }}" } }
    - { "uses": "cachix/install-nix-action@v14", "with": {"install_url": "https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install","extra_nix_config": "experimental-features = nix-command flakes ca-references\n" } }
    - name: "gha-init"
      shell: bash
      run: |
        ./nixup gha-init
    - name: cache-key
      id: cache-key
      shell: bash
      run: |
        echo "::set-output name=drvPath::$(nix eval --raw '.#devShellSrc.drvPath')"
        echo "::set-output name=outPath::$(nix eval --raw '.#devShellSrc')"
    - name: cache-setup
      uses: actions/cache@v2
      with:
        path: ./.nixcache/${{ steps.cache-key.outputs.outPath }}
        key: ${{ steps.cache-key.outputs.outPath }}
    - name: cache-maybe-load-shell
      shell: bash
      run: |
        set -x
        if [[ -d "./.nixcache/${{ steps.cache-key.outputs.outPath }}" ]]; then
          nix copy --no-check-sigs --from ./.nixcache/${{ steps.cache-key.outputs.outPath }} "${{ steps.cache-key.outputs.outPath }}"
          touch ./.nixcache/${{ steps.cache-key.outputs.outPath }}-loaded
        fi
    - name: "init"
      shell: bash
      run:  .github/exec __init
    - name: cache-maybe-save-shell
      shell: bash
      run: |
        set -x
        if [[ ! -f ./.nixcache/${{ steps.cache-key.outputs.outPath }}-loaded ]]; then
          nix build -L "${{ steps.cache-key.outputs.drvPath }}"
          nix copy --no-check-sigs --to ./.nixcache/${{ steps.cache-key.outputs.outPath }} "${{ steps.cache-key.outputs.outPath }}"
        fi
