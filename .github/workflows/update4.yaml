name: "Update4"
on:
  push:

concurrency: update4
jobs:
  "update":
    runs-on: ubuntu-latest
    concurrency: update4-${{matrix.jobs.branch}}-${{matrix.jobs.target}}
    steps:
    - { "uses": "actions/checkout@v2", "with": { "ref": "main" } }
    - name: prep
      uses: ./.github/actions/prep
      with:
        tailscaleAuthkey: "${{ secrets.TAILSCALE_AUTHKEY }}"
    - name: "packet-create-instances"
      env: { "NIXUP_SECRETS": "${{ secrets.NIXUP_SECRETS }}" }
      run: .github/exec ./nixup packet-up
    - name: "update"
      env: { "NIXUP_SECRETS": "${{ secrets.NIXUP_SECRETS }}" }
      run: |
        cat << EOF | .github/exec
          set -x
          git checkout -b auto-update4
          git reset --hard main
          ./nixup update
          ./nixup update-pkgs
          git push origin HEAD -f
        EOF

  "build":
    needs: "update"
    runs-on:
    - ${{matrix.jobs.runson}}
    concurrency: build2-${{matrix.jobs.branch}}-${{matrix.jobs.target}}
    strategy:
      matrix:
        jobs:
        - { "branch": "auto-update4",  "target": "bundles.x86_64-linux",   "runson": "gha-x64" }
        - { "branch": "auto-update4",  "target": "bundles.aarch64-linux",  "runson": "gha-arm64" }
        - { "branch": "auto-update4",  "target": "bundles.x86_64-linux",   "runson": "Ubuntu-x64" }
    steps:
    - { "uses": "actions/checkout@v2", "with": { "ref": "auto-update4" } }
    - { "name": "Tailscale", "uses": "tailscale/github-action@v1", "with": { "authkey": "${{ secrets.TAILSCALE_AUTHKEY }}" } }
    - { "uses": "cachix/install-nix-action@v14", "with": {"install_url": "https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install","extra_nix_config": "experimental-features = nix-command flakes ca-references\n" } }
    - { "name": "init", "run": ".github/exec __init" }
    - name: build-n-cache
      env: { "NIXUP_SECRETS": "${{ secrets.NIXUP_SECRETS }}" }
      run: .github/exec ./nixup ci_nb_cache ${{ matrix.jobs.target }}

  "publish":
    needs: "build"
    runs-on: ubuntu-latest
    steps:
    - { "uses": "actions/checkout@v2", "with": { "ref": "auto-update4" } }
    - { "name": "Tailscale", "uses": "tailscale/github-action@v1", "with": { "authkey": "${{ secrets.TAILSCALE_AUTHKEY }}" } }
    - { "uses": "cachix/install-nix-action@v14", "with": {"install_url": "https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install","extra_nix_config": "experimental-features = nix-command flakes ca-references\n" } }
    - { "name": "init", "run": ".github/exec __init" }
    - name: "publish"
      env: { "NIXUP_SECRETS": "${{ secrets.NIXUP_SECRETS }}" }
      run: |
        cat << EOF | .github/exec
          set -x
          git log -n 5 --oneline origin/main
          git log -n 5 --oneline origin/auto-update4
          git checkout -b auto-update4-ready
          git reset --hard origin/auto-update4
          git rebase origin/main
        EOF
        cat << EOF | .github/exec
          ./nixup ci_check
          git push origin HEAD -f
        EOF || true

  # "cleanup":
  #   needs: "publish"
  #   if: ${{ always() }}
  #   runs-on: ubuntu-latest
    # steps:
    # - { "uses": "actions/checkout@v2", "with": { "ref": "auto-update4" } }
    # - { "name": "Tailscale", "uses": "tailscale/github-action@v1", "with": { "authkey": "${{ secrets.TAILSCALE_AUTHKEY }}" } }
    # - { "uses": "cachix/install-nix-action@v14", "with": {"install_url": "https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210823_af94b54/install","extra_nix_config": "experimental-features = nix-command flakes ca-references\n" } }
  #     run: .github/exec __init
  #   - name: "packet-destroy-instances"
  #     if: ${{ always() }}
  #    env: { "NIXUP_SECRETS": "${{ secrets.NIXUP_SECRETS }}" }
  #     run: .github/exec ./nixup packet-down
