name: "Update"
on:
  push:
  schedule:
    - cron: '*/10 * * * *'
jobs:
  "update":
    runs-on: ubuntu-latest
    concurrency: update-${{matrix.jobs.branch}}-${{matrix.jobs.target}}
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: "init"
      run: .github/exec __init
    - name: "update"
      env: { "CACHIX_SIGNING_KEY": "${{ secrets.cachix_key_colemickens }}" }
      run: |
        export CI_JOB_ID="${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
        cat << EOF | .github/exec
          git checkout -b auto-update
          git reset --hard main 
          ./nixup update
          ./nixup update-pkgs
          git push origin HEAD -f
        EOF

  "build":
    needs: "update"
    runs-on:
    - ${{matrix.jobs.runson}}
    concurrency: build-${{matrix.jobs.branch}}-${{matrix.jobs.target}}
    strategy:
      matrix:
        jobs:
        - { "branch": "auto-update",  "target": "toplevels.jeffhyper",  "runson": "ubuntu-latest" }
        # - { "branch": "auto-update",  "target": "toplevels.porty",      "runson": "ubuntu-latest" }
        # - { "branch": "auto-update",  "target": "toplevels.raisin",     "runson": "ubuntu-latest" }
        # - { "branch": "auto-update",  "target": "toplevels.rpizero1",   "runson": "ubuntu-latest" }
        # - { "branch": "auto-update",  "target": "toplevels.xeep",       "runson": "ubuntu-latest" }
        #- { "branch": "main",         "target": "bundles.x86_64-linux", "runson": "self-hosted" }
        #- { "branch": "auto-update",  "target": "bundles.x86_64-linux", "runson": "self-hosted" }
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ matrix.jobs.branch }}
    - uses: cachix/install-nix-action@v13
      with:
        #install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20210429_d15a196/install
        install_url: "https://nixos-nix-install-tests.cachix.org/serve/dznj18ywp62vghk98m5vclfqmszjnbph/install"
        install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
        extra_nix_config: |
          experimental-features = nix-command flakes ca-references
    - name: "init"
      run: .github/exec __init
    - name: build
      run: .github/exec ./nixup ci_nbu "${{ matrix.jobs.target }}"
    - name: cache
      env: { "CACHIX_SIGNING_KEY": "${{ secrets.cachix_key_colemickens }}" }
      run: .github/exec ./nixup ci_cache "${{ matrix.jobs.target }}"
    - uses: actions/upload-artifact@v2
      with:
        name: path-info
        path: /tmp/toplevels_jeffhyper-path-info.json
    - uses: actions/upload-artifact@v2
      with:
        name: paths
        path: /tmp/toplevels_jeffhyper-paths

  "publish":
    needs: "build"
    runs-on: ubuntu-latest
    # note we must do this first
    # if we update "auto-update" first,
    # then we ALWAYS have the new git rev to build (for some build output product, not sure which)
    
    # also important: try to rebase auto-update on master
    # if we edit nixup on master and then this runs, it will
    # end up using the old nixup from the "old" auto-update branch

    # also important that we allow this skip to be stepped so that
    # 'auto-update' can always have a chance to properly
    # re-update from where origin/main happens to have gotten to
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
    - name: "init"
      run: .github/exec __init
    - name: "publish"
      run: |
        cat << EOF | .github/exec
          git checkout -b auto-update-ready
          git reset --hard origin/auto-update
          git rebase origin/main
        EOF
        cat << EOF | .github/exec
          ./nixup nbu_check_req
          git push origin HEAD -f
        EOF || true
