name: "nixcfg-next"
concurrency: "nixcfg-next"
on:
  schedule:
    - cron: '0/20 * * * *'
  workflow_dispatch:
  push:
    branches:
      - "main"
jobs:
  "update":
    runs-on: "slynux-default"
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        ref: main
    - name: next
      run: |
        nix develop .#ci -c ./ci-next.nu update
  "deploy":
    continue-on-error: ${{matrix.host.continueOnError}}
    strategy:
      fail-fast: false
      matrix:
        host:
          - { "name": "slynux", "activate": true, "continueOnError": false }
          - { "name": "raisin", "activate": true, "continueOnError": false }
          # TODO: either return, or re-enable errors for 'openstick'
          - { "name": "openstick", "activate": true, "continueOnError": true }
          # - { "name": "zeph", "activate": false, "continueOnError": true }
    runs-on: "slynux-default"
    needs: [ "update" ]
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        ref: main-next
    - name: deploy-${{matrix.host.name}}
      run: |
        nix develop .#ci -c ./ci-next.nu deploy --activate ${{matrix.host.activate}} ${{matrix.host.name}}
