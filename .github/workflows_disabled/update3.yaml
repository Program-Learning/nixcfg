name: "Update2"
on:
  push:
#  schedule:
#    - cron: '*/10 * * * *'

# TODO: use a run-specific branch and a cleanup job?

concurrency: update3
jobs:
  # TODO: add a job that spins up machines here
  # and adds an easy way for them to be reached
  # so that we basically get a mini-pool of builders
  "update":
    runs-on: ubuntu-latest
    concurrency: update3-${{matrix.jobs.branch}}-${{matrix.jobs.target}}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main
    - name: Tailscale
      uses: tailscale/github-action@v1
      with:
        authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
    - uses: cachix/install-nix-action@v14
    - name: "init"
      run: .github/exec __init
    # - name: "packet-create-instances"
    #   run: .github/exec ./nixup packet-up
    - name: "update"
      env: { "CACHIX_SIGNING_KEY": "${{ secrets.cachix_key_colemickens }}", "_GITHUB_TOKEN": "${{ secrets._github_token }}", "METAL_AUTH_TOKEN": "${{ secrets.metal_auth_token }}", "METAL_PROJECT_ID": "${{ secrets.metal_project_id }}" }
      run: |
        export CI_JOB_ID="${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}"
        cat << EOF | .github/exec
          git checkout -b auto-update3
          git reset --hard main
          ./nixup update
          ./nixup update-pkgs
          git push origin HEAD -f
        EOF
    - name: build-n-cache
      env: { "CACHIX_SIGNING_KEY": "${{ secrets.cachix_key_colemickens }}", "_GITHUB_TOKEN": "${{ secrets._github_token }}", "METAL_AUTH_TOKEN": "${{ secrets.metal_auth_token }}", "METAL_PROJECT_ID": "${{ secrets.metal_project_id }}" }
      # run: .github/exec ./nixup ci_nb_cache_all
      run: .github/exec ./nixup ci_nb_cache_x86_64
    - name: "publish"
      env: { "CACHIX_SIGNING_KEY": "${{ secrets.cachix_key_colemickens }}", "_GITHUB_TOKEN": "${{ secrets._github_token }}", "METAL_AUTH_TOKEN": "${{ secrets.metal_auth_token }}", "METAL_PROJECT_ID": "${{ secrets.metal_project_id }}" }
      run: |
        cat << EOF | .github/exec
          set -x
          git log -n 5 --oneline origin/main
          git log -n 5 --oneline origin/auto-update3
          git checkout -b auto-update3-ready
          git reset --hard origin/auto-update3
          git rebase origin/main
        EOF
        cat << EOF | .github/exec
          ./nixup ci_check
          git push origin HEAD -f
        EOF
    - name: "packet-destroy-instances"
      if: ${{ always() }}
      env: { "CACHIX_SIGNING_KEY": "${{ secrets.cachix_key_colemickens }}", "_GITHUB_TOKEN": "${{ secrets._github_token }}", "METAL_AUTH_TOKEN": "${{ secrets.metal_auth_token }}", "METAL_PROJECT_ID": "${{ secrets.metal_project_id }}" }
      run: .github/exec ./nixup packet-down
