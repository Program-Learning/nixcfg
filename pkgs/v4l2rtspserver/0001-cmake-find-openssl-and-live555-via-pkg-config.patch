From 72f363f5eb23d015949d9c809275eb93967b34ff Mon Sep 17 00:00:00 2001
From: Cole Mickens <cole.mickens@gmail.com>
Date: Wed, 29 Sep 2021 23:22:08 -0700
Subject: [PATCH] cmake: find openssl and live555 via pkg-config

---
 CMakeLists.txt | 64 +++++++++++++++++++++++++++-----------------------
 1 file changed, 35 insertions(+), 29 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index e95a269..b941656 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,13 +13,8 @@ set(CMAKE_CXX_STANDARD 11)
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake/")
 
 # set version based on git
-find_package(Git)
-if(GIT_FOUND)
-    EXECUTE_PROCESS(COMMAND ${GIT_EXECUTABLE} describe --tags --always --dirty OUTPUT_VARIABLE VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)
-    STRING(REGEX REPLACE "^v(.*)" "\\1" VERSION "${VERSION}")
-    add_definitions("-DVERSION=\"${VERSION}\"")
-endif()
-
+set(VERSION "$ENV{VERSION}" CACHE INTERNAL "Copied from environment variable")
+add_definitions("-DVERSION=\"${VERSION}\"")
 
 # define executable to build
 include_directories("inc")
@@ -42,6 +37,17 @@ set(THREADS_PREFER_PTHREAD_FLAG TRUE)
 find_package (Threads)
 target_link_libraries (${PROJECT_NAME} Threads::Threads) 
 
+# openssl
+find_package(OpenSSL REQUIRED)
+target_link_libraries(${PROJECT_NAME} OpenSSL::SSL)
+
+# live555
+include(FindPkgConfig)
+pkg_check_modules(LIVE555 REQUIRED live555)
+#target_link_libraries(${PROJECT_NAME} ${LIVE555_LIBRARIES})
+#target_include_directories(${PROJECT_NAME} PUBLIC ${LIVE555_INCLUDE_DIRS})
+link_libraries(${LIVE555_LIBRARIES})
+include_directories(${LIVE555_INCLUDE_DIRS})
 
 # LOG4CPP
 find_library(LOG4CPP_LIBRARY NAMES log4cpp)
@@ -55,28 +61,28 @@ endif ()
 
 
 # live555
-find_package(LiveMedia)
-find_package(UsageEnvironment)
-find_package(BasicUsageEnvironment)
-find_package(GroupSock)
-if (LIBLIVEMEDIA_FOUND AND LIBBASICUSAGEENVIRONMENT_FOUND AND LIBUSAGEENVIRONMENT_FOUND AND LIBGROUPSOCK_FOUND)
-    message(STATUS "live555 loaded")
-    set(LIVEINCLUDE ${LIBLIVEMEDIA_INCLUDE_DIR} ${LIBBASICUSAGEENVIRONMENT_INCLUDE_DIR} ${LIBUSAGEENVIRONMENT_INCLUDE_DIR} ${LIBGROUPSOCK_INCLUDE_DIR})
-    target_link_libraries (${PROJECT_NAME} ${LIBLIVEMEDIA_LIBRARY} ${LIBUSAGEENVIRONMENT_LIBRARY} ${LIBBASICUSAGEENVIRONMENT_LIBRARY} ${LIBGROUPSOCK_LIBRARY}) 
-    SET(CPACK_DEBIAN_PACKAGE_DEPENDS ${CPACK_DEBIAN_PACKAGE_DEPENDS}livemedia-utils,)
-else()
-    set(LIVE ${CMAKE_BINARY_DIR}/live)
-    set(LIVEINCLUDE ${LIVE}/groupsock/include ${LIVE}/liveMedia/include ${LIVE}/UsageEnvironment/include ${LIVE}/BasicUsageEnvironment/include)
-    if (NOT EXISTS ${LIVE})
-        file (DOWNLOAD ${LIVE555URL} ${CMAKE_BINARY_DIR}/live555-latest.tar.gz )
-        EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E tar xvf ${CMAKE_BINARY_DIR}/live555-latest.tar.gz  RESULT_VARIABLE unpack_result)
-        if(NOT unpack_result STREQUAL "0")
-            message(FATAL_ERROR "Fetching and compiling live555 failed!")
-        endif()
-    endif()
-    FILE(GLOB LIVESOURCE ${LIVE}/groupsock/*.c* ${LIVE}/liveMedia/*.c* ${LIVE}/UsageEnvironment/*.c* ${LIVE}/BasicUsageEnvironment/*.c*)
-    add_definitions(${LIVE555CFLAGS})
-endif()
+# find_package(LiveMedia)
+# find_package(UsageEnvironment)
+# find_package(BasicUsageEnvironment)
+# find_package(GroupSock)
+# if (LIBLIVEMEDIA_FOUND AND LIBBASICUSAGEENVIRONMENT_FOUND AND LIBUSAGEENVIRONMENT_FOUND AND LIBGROUPSOCK_FOUND)
+#     message(STATUS "live555 loaded")
+#     set(LIVEINCLUDE ${LIBLIVEMEDIA_INCLUDE_DIR} ${LIBBASICUSAGEENVIRONMENT_INCLUDE_DIR} ${LIBUSAGEENVIRONMENT_INCLUDE_DIR} ${LIBGROUPSOCK_INCLUDE_DIR})
+#     target_link_libraries (${PROJECT_NAME} ${LIBLIVEMEDIA_LIBRARY} ${LIBUSAGEENVIRONMENT_LIBRARY} ${LIBBASICUSAGEENVIRONMENT_LIBRARY} ${LIBGROUPSOCK_LIBRARY})
+#     SET(CPACK_DEBIAN_PACKAGE_DEPENDS ${CPACK_DEBIAN_PACKAGE_DEPENDS}livemedia-utils,)
+# else()
+#     set(LIVE ${CMAKE_BINARY_DIR}/live)
+#     set(LIVEINCLUDE ${LIVE}/groupsock/include ${LIVE}/liveMedia/include ${LIVE}/UsageEnvironment/include ${LIVE}/BasicUsageEnvironment/include)
+#     if (NOT EXISTS ${LIVE})
+#         file (DOWNLOAD ${LIVE555URL} ${CMAKE_BINARY_DIR}/live555-latest.tar.gz )
+#         EXECUTE_PROCESS(COMMAND ${CMAKE_COMMAND} -E tar xvf ${CMAKE_BINARY_DIR}/live555-latest.tar.gz  RESULT_VARIABLE unpack_result)
+#         if(NOT unpack_result STREQUAL "0")
+#             message(FATAL_ERROR "Fetching and compiling live555 failed!")
+#         endif()
+#     endif()
+#     FILE(GLOB LIVESOURCE ${LIVE}/groupsock/*.c* ${LIVE}/liveMedia/*.c* ${LIVE}/UsageEnvironment/*.c* ${LIVE}/BasicUsageEnvironment/*.c*)
+#     add_definitions(${LIVE555CFLAGS})
+# endif()
 
 # librtsp
 aux_source_directory(src SRC_FILES)
-- 
2.33.0

