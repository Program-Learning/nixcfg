#! /usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
#set +x; source /run/secrets/nixup-secrets; set -x
set -euo pipefail
cd "${DIR}"

function nix() { "${DIR}/misc/nix.sh" "${@}" ; }

cache="colemickens"
nixcfg="${DIR}"

rb="./misc/rbuild.sh"
ra="./misc/ractivate.sh"
commbox="${DIR}/misc/commbox.sh"
tsip="./misc/tsip.sh"

srcdirs=(
  "nixpkgs/cmpkgs"
  "home-manager/cmhm"
  "nixpkgs/master"
  "nixpkgs-wayland"
  "flake-firefox-nightly"
)
srcdirs=("${srcdirs[@]/#/"${HOME}/code/"}")

BLDR_X86="${BLDR_X86:-$("${tsip}" porty)}";
BLDR_A64="${BLDR_A64:-"colemickens@aarch64.nixos.community"}";

cmd="${1:-"z"}"; shift || true

cleanup() {
  if [[ "${ZELLIJ_LAYOUT_NAME:-""}" != "" ]]; then
    read -p 'Press enter to continue'
  fi
}
trap "cleanup" EXIT

case "${cmd}" in
  "inputup")
    for i in "${srcdirs[@]}"; do
      (test -d "${i}/.git" && git -C "${i}" pull --rebase) &
    done
    wait
    for i in "${srcdirs[@]}"; do
      (test -d "${i}" \
        && git -C "${i}" pull --rebase \
        && git -C "${i}" push origin HEAD -f) &
    done
    wait
  ;;
  "pkgup")
    pushd ./pkgs
    ./update.sh "${@:-}"
    popd
    "${0}" cacheshell
  ;;
  "lockup")
    nix "${nixargs[@]}" flake lock --recreate-lock-file --commit-lock-file
    "${0}" cacheshell
  ;;
  "cacheshell") "${rb}" "${BLDR_X86}" "localhost" ".#devShell.x86_64-linux.inputDerivation";;

  # individual build targets
  "jeffhyper" | "porty" | "raisin" | "xeep")
    out="$("${rb}" "${BLDR_X86}" "$("${tsip}" "${cmd}")" "${nixcfg}#toplevels.${cmd}" "${@}")"
    "${ra}" "$out" "$("${tsip}" "${cmd}")"
  ;;

  "rpifour1" | "rpithreebp1" | "rpizerotwo1")
    "${commbox}"
    out="$("${rb}" "${BLDR_A64}" "$("${tsip}" "${cmd}")" "${nixcfg}#toplevels.${cmd}" "${@}" \
      --override-input 'nixpkgs' "${HOME}/code/nixpkgs/rpi-updates-auto" \
      --override-input 'tow-boot' "${HOME}/code/tow-boot")"
    "${ra}" "$out" "$("${tsip}" "${cmd}")"
  ;;

  # "rpifour1" | "rpithreebp1" | "rpizerotwo1" |
  "sinkor" | "pinebook" | "blueline" | "enchilada")
    "${commbox}"
    out="$("${rb}" "${BLDR_A64}" "$("${tsip}" "${cmd}")" "${nixcfg}#toplevels.${cmd}" "${@}")"
    "${ra}" "$out" "$("${tsip}" "${cmd}")"
  ;;

  "towboot")
    "${commbox}"
    "${rb}" "${BLDR_A64}" "localhost" "${nixcfg}#images.rpifour1_towboot" "${@}"
  ;;

  "x86")
    "${rb}" "${BLDR_X86}" "$("${tsip}" porty)"  "${nixcfg}#topbundles.x86_64-linux" "${@}"
    "${rb}" "${BLDR_X86}" "$("${tsip}" porty)"  "${nixcfg}#bundles.x86_64-linux" "${@}"
  ;;
  "a64")
    "${commbox}"
    "${rb}" "${BLDR_A64}" "$("${tsip}" porty)"  "${nixcfg}#topbundles.aarch64-linux" "${@}"
  ;;

  "z")
    "${0}" inputup
    "${0}" lockup
    "${0}" pkgup
    "${0}" cacheshell
    "${0}" build
    "${0}" deploy
  ;;
  "build")
    env ZELLIJ_LAYOUT_NAME="nixup.build" \
      zellij --layout-path "${nixcfg}/nixup.build.zellij"
  ;;
  "deploy")
    env ZELLIJ_LAYOUT_NAME="nixup.deploy" \
      zellij --layout-path "${nixcfg}/nixup.deploy.zellij"
  ;;
esac

echo -e "\nexit=$?" > /dev/stderr
exit 0
