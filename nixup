#! /usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
set -euo pipefail

export BLDR_X86="${BLDR_X86:-$(tailscale ip --6 slynux)}";
export BLDR_A64="${BLDR_A64:-"colemickens@aarch64.nixos.community"}";

function _h1() { printf "\n=======================================================\n${1}\n=======================================================\n" >/dev/stderr; }
function _h2() { printf "\n-- ${1} \n" >/dev/stderr; }

function nixup() { "${0}" "${@}"; }

function nixbuild() { "${DIR}/misc/nixbuild.sh" "${@}"; }
function activate() { "${DIR}/misc/activate.sh" "${@}"; }

srcdirs=(
  "${HOME}/code/nixpkgs/master"
  "${HOME}/code/nixpkgs/cmpkgs"
  "${HOME}/code/nixpkgs/cmpkgs-cross-riscv64"
  "${HOME}/code/nixpkgs/cmpkgs-cross-armv6l"
  "${HOME}/code/home-manager/cmhm"
  "${HOME}/code/tow-boot/development"
  "${HOME}/code/tow-boot/rpi"
  "${HOME}/code/tow-boot/radxa-zero"
  "${HOME}/code/tow-boot/visionfive"
  "${HOME}/code/tow-boot/lteusb8916"
  "${HOME}/code/nixpkgs-wayland/master"
  "${HOME}/code/visionfive-nix"
  "${HOME}/code/flake-firefox-nightly"
  "${HOME}/code/mobile-nixos/master"
  "${HOME}/code/mobile-nixos/blueline-mainline-only--2022-08"
  "${HOME}/code/mobile-nixos/openstick"
  "${HOME}/code/nix-coreboot"
)
resets=(
  "${HOME}/code/tow-boot/development"
  "${HOME}/code/nixpkgs/master"
)

cmd="${1:-"z"}"; shift || true

case "${cmd}" in

  "pkgup")   _h1 "pkgup";    "${DIR}/pkgs/update.sh" "${@}"; ;;
  "rpiup")   _h1 "rpiup";    "${DIR}/misc/rpi/rpipkgs.sh"; ;;
  "lockup")  _h1 "lockup";   (set -x; cd "${DIR}"; nix "${nixargs[@]}" flake lock --recreate-lock-file --commit-lock-file); ;;
  "shellup") _h1 "shellup";  nixbuild "auto" "cachix:colemickens" ".#cache-dev"; ;;
  "inputup") _h1 "inputup";
    for s in "${srcdirs[@]}"; do
      _h2 "inputup - ${s}"
      test -d "${s}" || return;
      set -x
      git -C "${s}" rebase --abort || true; git -C "${s}" pull --rebase;  git -C "${s}" push origin HEAD -f;
      set +x
    done;
  ;;
  "up") _h1 "upup";
    true \
    && nixup inputup \
    && nixup rpiup \
    && nixup lockup \
    && nixup pkgup \
    && nixup shellup 
  ;;
  "cache-all") _h1 "cache-all";
    ./nixup build ".#cache-all"
  ;;
  "upz") _h1 "upz";
    nixup up
    date
  ;;
  "upzz") _h1 "upzz";
    nixup upz
    # nixup cache-all
    nixup deploy carbon || true
    nixup deploy slynux
    nixup deploy jeffhyper
    nixup deploy raisin
    nixup deploy openstick
    nixup deploy xeep
    date
  ;;

  "build")
    nixbuild "auto" "cachix:colemickens" "${@}";
  ;;
  "_build")
    nixbuild "${@}"
  ;;
  "deploy") _h1 "deploy ${1}"
    set -o errtrace
    host="${1}"; shift || true
    if [[ "${host}" == "$(hostname)" ]]; then export NIXUP_ACTION="switch"; fi
    if [[ "${host}" == "raisin" ]]; then export NIXUP_ACTION="switch"; fi
    if [[ "${host}" == "xeep" ]]; then export NIXUP_ACTION="switch"; fi

    outres="$(nixup _build "auto" "cachix:colemickens" ".#toplevels.${host}" "${@}")"

    activate "${NIXUP_ACTION:-"switch"}" "${outres}" "${host}"
  ;;
  "rdeploy") export NIXUP_ACTION="reboot"; nixup deploy "${@}"; ;;
  
  "pi-on")
    curl -s -X POST -H "Authorization: Bearer $(cat /run/secrets/home-assistant-bearer-token)" -H "Content-Type: application/json" -d "{\"entity_id\": \"switch.${1}\"}" \
        https://home.x.cleo.cat/api/services/switch/turn_on >/dev/null
  ;;
  "pi-off")
    curl -s -X POST -H "Authorization: Bearer $(cat /run/secrets/home-assistant-bearer-token)" -H "Content-Type: application/json" -d "{\"entity_id\": \"switch.${1}\"}" \
        https://home.x.cleo.cat/api/services/switch/turn_off >/dev/null
  ;;
  "pitest")
    
    set -x
    while true;
    do
      set +eo pipefail
      netboots1_out="$(nixup build .#bundles.x86_64-linux.netboots)"
      netboots2_out="$(nixup build .#bundles.aarch64-linux.netboots)"
      if ssh "cole@$(tailscale ip --4 xeep)" "nix-store -r ${netboots1_out} --option narinfo-cache-negative-ttl 0" &&
        ssh "cole@$(tailscale ip --4 xeep)" "nix-store -r ${netboots2_out} --option narinfo-cache-negative-ttl 0";
      then
        echo "yes"
        break
      else
        echo "no"
      fi
      
      echo "riscv build failed, probably nix bug, will retry in 10 seconds"
      sleep 10
    done
    set -eo pipefail
    
    export BLDR_X86="$(tailscale ip --4 xeep)"
    nixup deploy xeep
    nixup pireboot
  ;;
  "pireboot")
    pis=(
      "wp6_sw106_relay" # rpi-powerstrip
      "wp6_sw103_relay" # visionfive
    )
    parallel -j$(nproc) --halt 1 --verbose --tag "${DIR}/nixup pi-off" ::: "${pis[@]}"
    sleep 1
    parallel -j$(nproc) --halt 1 --verbose --tag "${DIR}/nixup pi-on" ::: "${pis[@]}"
  ;;

  *) printf "!!! unknown command\n" >/dev/stderr; exit -1; ;;
esac
