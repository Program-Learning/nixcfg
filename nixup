#! /usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
set -euo pipefail

export BLDR_X86="${BLDR_X86:-$(tailscale ip --6 slynux)}";
export BLDR_A64="${BLDR_A64:-"colemickens@aarch64.nixos.community"}";

function _h1() { printf "\n=================================================================\n${1}\n=================================================================\n" >/dev/stderr; }

function nixup() { "${0}" "${@}"; }

function nixbuild() { "${DIR}/misc/nixbuild.sh" "${@}"; }
function activate() { "${DIR}/misc/activate.sh" "${@}"; }

cmd="${1:-"upz"}"; shift

srcdirs=(
  "${HOME}/code/nixpkgs/master"
  "${HOME}/code/nixpkgs/cmpkgs"
  "${HOME}/code/nixpkgs/cmpkgs-cross-riscv64"
  "${HOME}/code/nixpkgs/cmpkgs-cross-armv6l"
  "${HOME}/code/home-manager/master"
  "${HOME}/code/home-manager/cmhm"
  "${HOME}/code/tow-boot/development"
  "${HOME}/code/tow-boot/rpi"
  "${HOME}/code/tow-boot/radxa-zero"
  "${HOME}/code/tow-boot/visionfive"
  "${HOME}/code/tow-boot/lteusb8916"
  "${HOME}/code/nixpkgs-wayland/master"
  # "${HOME}/code/visionfive-nix"
  "${HOME}/code/flake-firefox-nightly"
  "${HOME}/code/mobile-nixos/master"
  "${HOME}/code/mobile-nixos/blueline-mainline-only--2022-08"
  "${HOME}/code/mobile-nixos/openstick"
  # "${HOME}/code/nix-coreboot"
  "${HOME}/code/linux/master"
)

case "${cmd}" in
  "pkgup")    "${DIR}/pkgs/update.sh" "${@}"; ;;
  "rpiup")    "${DIR}/misc/rpi/rpipkgs.sh"; ;;
  "shellup")  nixbuild "auto" "cachix:colemickens" ".#cache-dev"; ;;
  "cacheup")  nixbuild "auto" "cachix:colemickens" ".#cache-all"; ;;
  "lockup")
    nix "${nixargs[@]}" flake lock \
      --recreate-lock-file --commit-lock-file \
      "${DIR}"
  ;;
  "inputup")
    for s in "${srcdirs[@]}"; do
      printf "==:: inputup: ${s}\n" >&2
      test -d "${s}" || return;
      git -C "${s}" rebase --abort &>/dev/null || true
      git -C "${s}" pull --rebase;  git -C "${s}" push origin HEAD -f;
      printf "\n" >&2
    done;
  ;;
  "up")
    nixup inputup && nixup rpiup && nixup lockup \
    && nixup pkgup && nixup shellup 
  ;;
  "upz")
    nixup up && nixup cacheup
    set +e
    nixup deploy carbon;    nixup deploy slynux
    nixup deploy raisin;    nixup deploy xeep
    nixup deploy jeffhyper; nixup deploy openstick
    set -e
    date
  ;;

  "build")
    nixbuild "auto" "cachix:colemickens" "${@}";
  ;;
  "_build")
    nixbuild "${@}"
  ;;
  "deploy") _h1 "deploy" "${1}"
    set -o errtrace
    host="${1}"; shift || true
    outres="$(nixup _build "auto" "cachix:colemickens" ".#toplevels.${host}" "${@}")"
    activate "${NIXUP_ACTION:-"switch"}" "${outres}" "${host}"
  ;;
  
  # "pi-on")
  #   curl -s -X POST -H "Authorization: Bearer $(cat /run/secrets/home-assistant-bearer-token)" -H "Content-Type: application/json" -d "{\"entity_id\": \"switch.${1}\"}" \
  #       https://home.x.cleo.cat/api/services/switch/turn_on >/dev/null
  # ;;
  # "pi-off")
  #   curl -s -X POST -H "Authorization: Bearer $(cat /run/secrets/home-assistant-bearer-token)" -H "Content-Type: application/json" -d "{\"entity_id\": \"switch.${1}\"}" \
  #       https://home.x.cleo.cat/api/services/switch/turn_off >/dev/null
  # ;;
  # "pitest")
    
  #   set -x
  #   while true;
  #   do
      # set +eo pipefail
      # netboots1_out="$(nixup build .#bundles.x86_64-linux.netboots)"
      # netboots2_out="$(nixup build .#bundles.aarch64-linux.netboots)"
      # if ssh "cole@$(tailscale ip --4 xeep)" "nix-store -r ${netboots1_out} --option narinfo-cache-negative-ttl 0" &&
      #   ssh "cole@$(tailscale ip --4 xeep)" "nix-store -r ${netboots2_out} --option narinfo-cache-negative-ttl 0";
      # then
      #   echo "yes"
      #   break
      # else
      #   echo "no"
      # fi
      
      # echo "riscv build failed, probably nix bug, will retry in 10 seconds"
  #     sleep 10
  #   done
  #   set -eo pipefail
    
  #   export BLDR_X86="$(tailscale ip --4 xeep)"
  #   nixup deploy xeep
  #   nixup pireboot
  # ;;
  # "pireboot")
  #   pis=(
  #     "wp6_sw106_relay" # rpi-powerstrip
  #     "wp6_sw103_relay" # visionfive
  #   )
  #   parallel -j$(nproc) --halt 1 --verbose --tag "${DIR}/nixup pi-off" ::: "${pis[@]}"
  #   sleep 1
  #   parallel -j$(nproc) --halt 1 --verbose --tag "${DIR}/nixup pi-on" ::: "${pis[@]}"
  # ;;

  *) printf "!!! unknown command\n" >/dev/stderr; exit -1; ;;
esac
