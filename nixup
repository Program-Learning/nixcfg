#! /usr/bin/env bash
set -euo pipefail
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
set +x; source /run/secrets/nixup-secrets; set -x
cd "${DIR}"

nixargs=(--experimental-features "nix-command flakes") #ca-references ca-derivations recursive-nix")
buildargs=(
  #--option 'extra-substituters' 'https://colemickens.cachix.org https://nixpkgs-wayland.cachix.org https://arm.cachix.org https://thefloweringash-armv7.cachix.org'
  #--option 'extra-trusted-public-keys' 'colemickens.cachix.org-1:bNrJ6FfMREB4bd4BOjEN85Niu8VcPdQe4F4KxVsb/I4= nixpkgs-wayland.cachix.org-1:3lwxaILxMRkVhehr5StQprHdEo4IrE8sRho9R9HOLYA= arm.cachix.org-1:5BZ2kjoL1q6nWhlnrbAl+G7ThY7+HaBRD9PZzqZkbnM= thefloweringash-armv7.cachix.org-1:v+5yzBD2odFKeXbmC+OPWVqx4WVoIVO6UXgnSAWFtso='
  --option 'extra-binary-caches' 'https://cache.nixos.org https://colemickens.cachix.org https://nixpkgs-wayland.cachix.org https://arm.cachix.org https://thefloweringash-armv7.cachix.org' \
  --option 'trusted-public-keys' 'cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= colemickens.cachix.org-1:bNrJ6FfMREB4bd4BOjEN85Niu8VcPdQe4F4KxVsb/I4= nixpkgs-wayland.cachix.org-1:3lwxaILxMRkVhehr5StQprHdEo4IrE8sRho9R9HOLYA= arm.cachix.org-1:5BZ2kjoL1q6nWhlnrbAl+G7ThY7+HaBRD9PZzqZkbnM= thefloweringash-armv7.cachix.org-1:v+5yzBD2odFKeXbmC+OPWVqx4WVoIVO6UXgnSAWFtso=' \
  --option 'build-cores' '0' \
  --option 'narinfo-cache-negative-ttl' '0' \
  --builders-use-substitutes
)
cache="colemickens"

## <ci> #################################################
function _nix() { nix "${nixargs[@]}" "${buildargs[@]}" "${@}"; }
function pushbuild() {
  set -euo pipefail
  cachix watch-store -j2 "${cache}" & cachixpid=$!
  _nix build "${@}"
  kill -INT ${cachixpid}; wait ${cachixpid}
}
function cacheshell() { pushbuild ".#devShell.x86_64-linux.inputDerivation"; }

function ci_check() { nix-build-uncached "${nixargs[@]}" "${buildargs[@]}" "${@}" -build-flags "-j0"; }
function ci_nb_cache() { ci_check "${@}" || pushbuild "${@}"; }
function ciup() { ci_nb_cache '.#bundle'; }

## </ci> #################################################

function inputup() {
  set -euo pipefail
  srcdirs=( "nixpkgs/cmpkgs" "home-manager/cmhm" "nixpkgs/master" "nixpkgs-wayland" "flake-firefox-nightly" )
  # we basically undo parallel for now by setting, parallelism to 1
  # otherwise git shits its pants in the multi-worktree dirs
  false
  printf '%s\n' "${srcdirs[@]}" | \
    parallel --jobs 1 --halt soon,fail=1 --tag --progress -- \
      "[[ ! -d \"${HOME}/code/{.}\" ]] || (git -C '${HOME}/code/{.}' pull --rebase && git -C '${HOME}/code/{.}' push origin HEAD -f)"
   cacheshell;
}
function lockup() { nix "${nixargs[@]}" flake update --no-registries --commit-lock-file; cacheshell; }
function pkgup() { ./pkgs/update.sh "${@:-}"; cacheshell; }
function up() { set -euo pipefail; inputup && lockup && pkgup && ciup && cacheshell; }

## <remote> #################################################
function _remote() {
  set -euo pipefail
  remote="${1}"; buildattr="${2}"; target="${3}"; action="${4:-""}"
  out="$(nix eval --raw "${buildattr}")"
  _nix copy --to "ssh-ng://${remote}" --derivation "${buildattr}" --no-check-sigs
  _nix build --store "ssh-ng://${remote}" --eval-store "auto" "${buildattr}" |& tee /tmp/nb
  if [[ "${action}" == *cachix* ]]; then
    echo "${out}" | ssh "${remote}" "$(printf '\"%s\" ' sudo nix "${nixargs[@]}" run nixpkgs/nixos-unstable#cachix push "${cache}")"
    ssh "${target}" "$(printf '\"%s\" ' sudo nix-store "${nixargs[@]}" -r "${out}")"
  else nix copy --no-check-sigs --from "ssh-ng://${remote}" --to "ssh-ng://${target}" "${out}"
  fi
  if [[ "${action:-""}" == *activate* ]]; then
    ssh "${target}" "$(printf '\"%s\" ' sudo nix "${nixargs[@]}" build --no-link --profile /nix/var/nix/profiles/system "${out}")"
    ssh "${target}" "$(printf '\"%s\" ' sudo nix "${nixargs[@]}" shell -vv "${out}" -c switch-to-configuration switch)"
  fi
  if [[ "${action:-""}" == *reboot* ]]; then ssh "${target}" "sudo reboot"; fi
}
function tsip() {
  if [[ "${1}" == "$(hostname)" ]]; then printf "%s" "localhost";
  elif [[ "${1}" == "a64com" ]];    then printf "%s" "colemickens@aarch64.nixos.community";
  else                                   tailscale ip --6 ${1} | head -z -n1; fi
}
function pinebook()    { _remote "$(tsip a64com)"  ".#toplevels.pinebook"     "$(tsip pinebook)"    "activate"; }
function xeep()        { _remote "$(tsip xeep)"    ".#toplevels.xeep"         "$(tsip xeep)"        "activate"; }
function raisin()      { _remote "$(tsip raisin)"  ".#toplevels.raisin"       "$(tsip raisin)"      "${1:-"activate"}"; }
function jeffhyper()   { _remote "$(tsip porty)"   ".#toplevels.jeffhyper"    "$(tsip jeffhyper)"   "activate"; }
function porty()       { _remote "$(tsip porty)"   ".#toplevels.porty"        "$(tsip porty)"       "activate"; }
function rpizero1()    { _remote "$(tsip porty)"   ".#toplevels.rpizero1"     "$(tsip rpizero1)"    "activate"; }
function rpizero2()    { _remote "$(tsip porty)"   ".#toplevels.rpizero2"     "$(tsip rpizero2)"    "activate"; }
function rpifour1()    { _remote "$(tsip a64com)"  ".#toplevels.rpifour1"     "$(tsip rpifour1)"    "activate"; }
function sinkor()      { _remote "$(tsip a64com)"  ".#toplevels.sinkor"       "$(tsip sinkor)"      "activate"; }

function pinephone()   { _remote "$(tsip bldr-a64)"  ".#toplevels.pinephone"    "$(tsip pinephone)"   "activate"; }
function pinecache()   { _remote "$(tsip bldr-a64)"  ".#toplevels.pinephone"    "$(tsip pinephone)"   "cachix-activate"; }
function bluephone()   { _remote "$(tsip bldr-a64)"  ".#toplevels.bluephone"    "$(tsip bluephone)"   "activate"; }

function x64up() { up; porty; xeep; jeffhyper; raisin; rpizero1; rpizero2; }
function a64up() { rpifour1; sinkor; pinebook; }

function x64()   { _remote "$(tsip porty)"  ".#bundles.x86_64-linux" "$(tsip porty)" "none"; }
function a64()   { _remote "$(tsip a64com)" ".#bundles.aarch64-linux" "$(tsip porty)" "none"; }

function commbox() {
  ssh "colemickens@aarch64.nixos.community" \
    "nix-env -f /run/current-system/nixpkgs -iA git zellij nixUnstable htop ncdu"
  ssh "colemickens@aarch64.nixos.community" \
    "mkdir -p /home/colemickens/.config/cachix"
  scp "${HOME}/.config/cachix/cachix.dhall" \
    "colemickens@aarch64.nixos.community:/home/colemickens/.config/cachix/cachix.dhall"
}
function doit() {
  set -euo pipefail
  thing="${1}";
  result="$(nix eval --raw ".#${thing}")"
  out="$(echo "${thing}" | sha256sum | cut -d' ' -f1)"
  git commit . -m "wip"; git push origin HEAD
  ssh "colemickens@aarch64.nixos.community" "git -C /home/colemickens/code/nixcfg pull"
  ssh "colemickens@aarch64.nixos.community" "nix build -L /home/colemickens/code/nixcfg#${thing} --out-link /home/colemickens/${out}"
  ssh "colemickens@aarch64.nixos.community" "readlink -f /home/colemickens/${out} | cachix push colemickens"
  ssh "colemickens@aarch64.nixos.community" "rm -f /home/colemickens/${out}"

  nix-store -r "${result}"
  fastboot flash boot "${result}"
  fastboot reboot
}

function kexec() {
  _nix build --out-link /tmp/kexec \
    ".#nixosConfigurations.oracular_kexec.config.system.build.kexec_script"

  sudo /tmp/kexec
}
## </remote> #################################################

if [[ ! -z "${1:-""}" ]]; then cmd="${1}"; shift; fi
if [[ -z "${cmd:-""}" ]]; then
  cmd="up"
fi

set -x
"${cmd}" "${@}"
set +x
echo -e "\nexit=$?"
exit 0
