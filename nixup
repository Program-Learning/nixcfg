#! /usr/bin/env bash
set -euo pipefail
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
set +x; source /run/secrets/nixup-secrets; set -x
cd "${DIR}"

cache="colemickens"

## <ci> #######################################################################
function nix() { "${DIR}/misc/nix.sh" "${@}"; }
function pushbuild() {
  set -euo pipefail
  cachix watch-store -j2 "${cache}" & cachixpid=$!
  nix build "${@}"
  kill -INT ${cachixpid}; wait ${cachixpid}
}
function cacheshell() { pushbuild ".#devShell.x86_64-linux.inputDerivation"; }

function ci_check() { nix-build-uncached "${nixargs[@]}" "${buildargs[@]}" "${@}" -build-flags "-j0"; }
function ci_nb_cache() { ci_check "${@}" || pushbuild "${@}"; }
function ciup() { ci_nb_cache '.#bundle'; }
## </ci> ######################################################################
## <updates> ##################################################################
function inputup() {
  set -euo pipefail
  srcdirs=( "nixpkgs/cmpkgs" "home-manager/cmhm" "nixpkgs/master" "nixpkgs-wayland" "flake-firefox-nightly" )
  for i in "${srcdirs[@]}"; do
    if [[ -d "$HOME/code/${i}" ]]; then echo "rebase/update: ${i}" && true \
        && git -C "$HOME/code/${i}" pull --rebase \
        && git -C "$HOME/code/${i}" push origin HEAD -f
    else
      echo "skip: ${i}"
    fi
  done
  cacheshell
}
function lockup() { nix "${nixargs[@]}" flake update --no-registries --commit-lock-file; cacheshell; }
function pkgup() { ./pkgs/update.sh "${@:-}"; cacheshell; }
function up() { set -euo pipefail; inputup && lockup && pkgup && ciup && cacheshell; }
## </updates> #################################################################
## <remote> ###################################################################
function tsip() {
  if [[ "${1}" == "$(hostname)" ]]; then printf "%s" "localhost";
  elif [[ "${1}" == "a64com" ]];    then printf "%s" "colemickens@aarch64.nixos.community";
  else                                   tailscale ip --6 ${1} | head -z -n1; fi
}
function rbuild() { ./misc/rbuild.sh "${@}"; }
function sinkor() { rbuild "oldcopy" "activate" "$(tsip sinkor)" "$(tsip sinkor)"  "toplevels.sinkor"; }

function a64()    { rbuild "oldcopy" "activate" "$(tsip a64com)" "$(tsip raisin)"  "topbundles.aarch64-linux"; }

# ## x86_64-linux
# function porty()     { _remote "$(tsip porty)"   ".#toplevels.porty"        "$(tsip porty)"      "${1:-"activate"}"; }
# function xeep()      { _remote "$(tsip xeep)"    ".#toplevels.xeep"         "$(tsip xeep)"       "${1:-"activate"}"; }
# function raisin()    { _remote "$(tsip raisin)"  ".#toplevels.raisin"       "$(tsip raisin)"     "${1:-"activate"}"; }
# function jeffhyper() { _remote "$(tsip porty)"   ".#toplevels.jeffhyper"    "$(tsip jeffhyper)"  "${1:-"activate"}"; }
# ## aarch64-linux
# function pinebook()  { _remote "$(tsip bldr-a64)"  ".#toplevels.pinebook"   "$(tsip pinebook)"   "${1:-"activate"}"; }
# function pinephone() { _remote "$(tsip bldr-a64)"  ".#toplevels.pinephone"  "$(tsip pinephone)"  "${1:-"activate"}"; }
# function blueline()  { false; }
# function enchilada() { false; }
# function rpifour1()  { _remote "$(tsip bldr-a64)"  ".#toplevels.rpifour1"   "$(tsip rpifour1)"   "${1:-"activate"}"; }
# function sinkor()    { _remote "$(tsip sinkor)"  ".#toplevels.sinkor"     "$(tsip sinkor)"     "${1:-"activate"}"; }
# function sinkor()    { _remote "$(tsip sinkor)"  ".#toplevels.ocular"     "$(tsip sinkor)"     "${1:-"activate"}"; }
# ## armv6l-linux (cross-built)
# function rpizero1()  { _remote "$(tsip porty)"     ".#toplevels.rpizero1"   "$(tsip rpizero1)"   "${1:-"activate"}"; }
# function rpizero2()  { _remote "$(tsip porty)"     ".#toplevels.rpizero2"   "$(tsip rpizero2)"   "${1:-"activate"}"; }
# ## bundles
# function x86()   { _remote "$(tsip bldr-x86)"  ".#bundles.x86_64-linux"   "$(tsip porty)" "${1:-"none"}"; }
# function a64()   { _remote "$(tsip bldr-a64)"  ".#bundles.aarch64-linux"  "$(tsip porty)" "${1:-"none"}"; }
# ## </remote> ##################################################################

if [[ ! -z "${1:-""}" ]]; then cmd="${1}"; shift; fi
if [[ -z "${cmd:-""}" ]]; then
  cmd="up"
fi

set -x; "${cmd}" "${@}"; set +x

echo -e "\nexit=$?"
exit 0
