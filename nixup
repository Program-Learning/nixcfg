#! /usr/bin/env bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
#set +x; source /run/secrets/nixup-secrets; set -x
set -euo pipefail
cd "${DIR}"

function nix() { "${DIR}/misc/nix.sh" "${@}" ; }

cache="colemickens"
nixcfg="${DIR}"

rb="./misc/rbuild.sh"
ra="./misc/ractivate.sh"
commbox="${DIR}/misc/commbox.sh"
tsip="./misc/tsip.sh"

srcdirs=(
  "nixpkgs/cmpkgs"
  "nixpkgs/crosspkgs"
#  "nixpkgs/cole-unstable"
#  "nixpkgs/cole-next"
#  "nixpkgs/cole-cross"
  "home-manager/cmhm"
  "nixpkgs/master"
  "nixpkgs-wayland"
  "flake-firefox-nightly"
  "mobile-nixos"
  "nix-coreboot"
)
srcdirs=("${srcdirs[@]/#/"${HOME}/code/"}")

export BLDR_X86="${BLDR_X86:-$("${tsip}" slynux)}";
export BLDR_A64="${BLDR_A64:-"colemickens@aarch64.nixos.community"}";

orig=("${@}")
cmd="${1:-"z"}"; shift || true

printf "\n\n%s\n%s\n" "###########################################" "${cmd}"
printf "%s\n" "###########################################"

cleanup() {
  retval=$?
  if [[ ${retval} != 0 && "${ZELLIJ_LAYOUT_NAME:-""}" != "" ]]; then
    read -r -p "restart? [y/N] " response
    if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]
    then
      exec "${0}" "${orig[@]}"
    fi
   fi
  printf "\n### exit=%s (cmd=%s)\n" "$?" "$cmd" > /dev/stderr
  exit $retval;
}

update_input() {
  set -x
  test -d "${1}/.git" || return 0;
  git -C "${1}" pull --rebase;
}
rebase_input() {
  set -x
  test -d "${1}" || return 0
  git -C "${1}" pull --rebase
  git -C "${1}" push origin HEAD -f
}
export -f update_input
export -f rebase_input

trap "cleanup" EXIT

set -x

case "${cmd}" in
  "inputup")
    parallel -j$(nproc) --halt 1 --verbose --tag update_input ::: "${srcdirs[@]}"
    parallel -j$(nproc) --halt 1 --verbose --tag rebase_input ::: "${srcdirs[@]}"
  ;;
  "pkgup")
    pushd ./pkgs >/dev/null;   ./update.sh "${@:-}";       popd >/dev/null
    if [[ "${1:-""}" != "" ]]; then "${rb}" "${BLDR_X86}" "$("${tsip}" "slynux")" "${nixcfg}#${1}"; fi
  ;;
  "lockup")
    set -x; nix "${nixargs[@]}" flake lock --recreate-lock-file --commit-lock-file; set +x
  ;;
  "cacheshell") "${rb}" "${BLDR_X86}" "localhost" ".#devShell.x86_64-linux.inputDerivation";;

  # individual build targets
  "jeffhyper" | "slynux" | "raisin" | "xeep" | "rpizero"* )
    out="$("${rb}" "${BLDR_X86}" "$("${tsip}" "${cmd}")" "${nixcfg}#toplevels.${cmd}" "${@}")"
    "${ra}" "$out" "$("${tsip}" "${cmd}")"
  ;;
  "rpifour1" | "sinkor" | "pinephone" )
    "${commbox}"
    out="$("${rb}" "${BLDR_A64}" "$("${tsip}" "${cmd}")" "${nixcfg}#toplevels.${cmd}" "${@}")"
    "${ra}" "$out" "$("${tsip}" "${cmd}")"
  ;;

  "boot-"*)
    "${commbox}"
    dev="$(echo $cmd | cut -d '-' -f2-)"
    script="$(SKIP_CACHIX=1 "${rb}" "${BLDR:-"${BLDR_A64}"}" "localhost" "${nixcfg}#phones.${dev}.flash-boot" "${@}")"
    FASTBOOT_SLOT="${FASTBOOT_SLOT:-"a"}" sh "${script}" "reboot"
    ;;

  "enchilada" | "blueline")
    "${commbox}"
    top="$("${rb}" "${BLDR_A64}" "cachix" "${nixcfg}#toplevels.${cmd}" "${@}")"
    "${ra}" "$top" "$("${tsip}" "${cmd}")"
  ;;

  "towboot")
    "${commbox}"
    "${rb}" "${BLDR_A64}" "localhost" "${nixcfg}#images.rpifour1_towboot" "${@}"
  ;;

  "x86")
    "${rb}" "${BLDR_X86}" "$("${tsip}" slynux)"  "${nixcfg}#hydraBundles.x86_64-linux.toplevels" "${@}"
    "${rb}" "${BLDR_X86}" "$("${tsip}" slynux)"  "${nixcfg}#hydraBundles.x86_64-linux.shells" "${@}"
  ;;
  "a64")
    "${commbox}"
    "${rb}" "${BLDR_A64}" "$("${tsip}" slynux)"  "${nixcfg}#hydraBundles.aarch64-linux.toplevels" "${@}"
  ;;

  "up")
    "${0}" inputup
    "${0}" lockup
    "${0}" pkgup
    "${0}" cacheshell
  ;;
    "z")
    "${0}" up
    "${0}" build
    "${0}" deploy-x86
    "${0}" deploy-a64
  ;;
  "build")
    env ZELLIJ_LAYOUT_NAME="nixup.build" \
      zellij --layout-path "${nixcfg}/nixup.build.zellij"
  ;;
  "deploy-x86" | "deploy-a64")
    env ZELLIJ_LAYOUT_NAME="nixup.${cmd}" \
      zellij --layout-path "${nixcfg}/nixup.${cmd}.zellij"
  ;;
esac
