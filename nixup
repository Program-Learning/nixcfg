#! /usr/bin/env bash
set -euo pipefail
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/stderr 2>&1 && pwd )"
set +x; source /run/secrets/nixup-secrets; set -x
cd "${DIR}"

cache="colemickens"

## <ci> ########################################################################
function nix() { "${DIR}/misc/nix.sh" "${@}"; }
function pushbuild() {
  set -euo pipefail
  cachix watch-store -j2 "${cache}" & cachixpid=$!
  nix build "${@}"
  kill -INT ${cachixpid}; wait ${cachixpid}
}
function cacheshell() { pushbuild ".#devShell.x86_64-linux.inputDerivation"; }

function ci_check() { nix-build-uncached "${nixargs[@]}" "${buildargs[@]}" "${@}" -build-flags "-j0"; }
function ci_nb_cache() { ci_check "${@}" || pushbuild "${@}"; }
function ciup() { ci_nb_cache '.#bundle'; }
## </ci> #######################################################################
## <updates> ###################################################################
function inputup() {
  set -euo pipefail
  srcdirs=( "nixpkgs/cmpkgs" "home-manager/cmhm" "nixpkgs/master" "nixpkgs-wayland" "flake-firefox-nightly" )
  for i in "${srcdirs[@]}"; do
    if [[ -d "$HOME/code/${i}" ]]; then echo "rebase/update: ${i}" && true \
        && git -C "$HOME/code/${i}" pull --rebase \
        && git -C "$HOME/code/${i}" push origin HEAD -f
    else
      echo "skip: ${i}"
    fi
  done
  cacheshell
}
function lockup() { nix "${nixargs[@]}" flake update --no-registries --commit-lock-file; cacheshell; }
function pkgup() { ./pkgs/update.sh "${@:-}"; cacheshell; }
function up() { set -euo pipefail; inputup && lockup && pkgup && ciup && cacheshell; }
function upup() { set -euo pipefail; up && x86 && a64; }
## </updates> ################################### ###############################
## <remote> ####################################################################
function tsip() {
  if [[ "${1}" == "$(hostname)" ]]; then printf "%s" "localhost";
  elif [[ "${1}" == "xeep" ]]; then printf "%s" "192.168.1.35";
  elif [[ "${1}" == "a64com" ]];    then printf "%s" "colemickens@aarch64.nixos.community";
  else                                   tailscale ip --4 ${1} | head -z -n1; fi
}
function r() { ./misc/rbuild.sh "${@}"; }
BLDR_X86="${BLDR_X86:-$(tsip porty)}";
BLDR_A64="${BLDR_A64:-$(tsip a64com)}";
function jeffhyper() { r "newcopy" "activate" "${BLDR_X86}" "$(tsip jeffhyper)" "$HOME/code/nixcfg#toplevels.jeffhyper" "${@}"; }
function porty()     { r "newcopy" "activate" "${BLDR_X86}" "$(tsip porty)"     "$HOME/code/nixcfg#toplevels.porty" "${@}"; }
function raisin()    { r "newcopy" "activate" "${BLDR_X86}" "$(tsip raisin)"    "$HOME/code/nixcfg#toplevels.raisin" "${@}"; }
function rpizero1()  { r "newcopy" "activate" "${BLDR_X86}" "$(tsip rpizero1)"  "$HOME/code/nixcfg#toplevels.rpizero1" "${@}"; }
function rpizero2()  { r "newcopy" "activate" "${BLDR_X86}" "$(tsip rpizero2)"  "$HOME/code/nixcfg#toplevels.rpizero2" "${@}"; }
function xeep()      { r "newcopy" "activate" "${BLDR_X86}" "$(tsip xeep)"      "$HOME/code/nixcfg#toplevels.xeep" "${@}"; }

function rpifour1()  { r "oldcopy" "activate" "${BLDR_A64}" "$(tsip rpifour1)"  "$HOME/code/nixcfg#toplevels.rpifour1" "${@}"; }
function sinkor()    { r "oldcopy" "activate" "${BLDR_A64}" "$(tsip sinkor)"    "$HOME/code/nixcfg#toplevels.sinkor" "${@}"; }
function pinebook()  { r "oldcopy" "activate" "${BLDR_A64}" "$(tsip pinebook)"  "${HOME}/code/nixcfg#toplevels.pinebook" "${@}"; }
function pinephone() { r "oldcopy" "activate" "${BLDR_A64}" "$(tsip pinephone)" "${HOME}/code/nixcfg#toplevels.pinephone" "${@}"; }
#function blueline()  { r "oldcopy" "nothingg" "${BLDR_A64}" "$(tsip blueline)"  "${HOME}/code/nixcfg#toplevels.blueline" "${@}"; }
function blueline()  {
  r "newcopy" "nothingg" "${BLDR_A64}"      "localhost"            "${HOME}/code/nixcfg#images.blueline" "${@}";
}
function bluetop()  {
  r "newcopycachix" "nothingg" "${BLDR_A64}"      "10.88.0.5"            "${HOME}/code/nixcfg#toplevels.blueline" "${@}";
}
function enchilada() { r "oldcopy" "activate" "${BLDR_A64}" "$(tsip enchilada)" "${HOME}/code/nixcfg#toplevels.enchilada" "${@}"; }

#function a64()    { r "oldcopy" "nothing" "${BLDR_A64}" "$(tsip raisin)" "${HOME}/code/nixcfg#topbundles.aarch64-linux" "${@}"; }
#function x86()    { r "newcopy" "nothing" "${BLDR_X86}"  "$(tsip porty)"  "${HOME}/code/nixcfg#topbundles.x86_64-linux" "${@}"; }
function x86()    { r "newcopy" "nothing" "${BLDR_X86}" "localhost" "${@}"; }
function a64()    { r "newcopy" "nothing" "${BLDR_A64}" "localhost" "${@}"; }

function go() {
  "${0}" xeep || true
  "${0}" raisin || true
  "${0}" porty || true

  "${0}" x86 '.#hydraBundles.x86_64-linux' || true
}
## </remote> ###################################################################

if [[ ! -z "${1:-""}" ]]; then cmd="${1}"; shift; fi
if [[ -z "${cmd:-""}" ]]; then
  cmd="up"
fi

set -x; "${cmd}" "${@}"; set +x

echo -e "\nexit=$?" > /dev/stderr
exit 0
