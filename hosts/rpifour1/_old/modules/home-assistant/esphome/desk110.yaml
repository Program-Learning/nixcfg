substitutions:
  ipnum: "110"
  devname: desk${ipnum}

esphome:
  name: ${devname}
  platform: ESP32
  board: esp32doit-devkit-v1

### START COMMON (TODO extract, make sure interpolation happens after concat)

wifi:
  ssid: "chimera-iot"
  password: "fafc996b949b6d53800"

  manual_ip:
    static_ip: 192.168.69.${ipnum}
    gateway: 192.168.1.1
    subnet: 255.255.0.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESPHome Fallback ${devname}"
    password: "d3ZBU8Kih1RN"

captive_portal:

api:
  password: "fafc996b949b6d53800"
  # not common
  # services:
  # - service: rfidreader_tag_ok
  #   then:
  #   - rtttl.play: "beep:d=16,o=5,b=100:b"

  # - service: rfidreader_tag_ko
  #   then:
  #   - rtttl.play: "beep:d=8,o=5,b=100:b"

  # - service: play_rtttl
  #   variables:
  #     song_str: string
  #   then:
  #   - rtttl.play: !lambda 'return song_str;'
  # /not common

logger:

ota:

### END COMMON

i2c:
  scan: False
  frequency: 400kHz

pn532_i2c:
  id: pn532_board
  on_tag:
    then:
    - homeassistant.tag_scanned: !lambda 'return x;'
    # - if:
    #     condition:
    #       switch.is_on: buzzer_enabled
    #     then:
    #     - rtttl.play: "success:d=24,o=5,b=100:c,g,b"
    # - if:
    #     condition:
    #       switch.is_on: led_enabled
    #     then:
    #     - light.turn_on:
    #         id: activity_led
    #         brightness: 100%
    #         red: 0%
    #         green: 100%
    #         blue: 0%
    #         flash_length: 500ms

# # Define the buzzer output
# output:
# - platform: esp8266_pwm
#   pin: D7
#   id: buzzer

binary_sensor:
  - platform: status
    name: "${devname} Status"

# # Define buzzer as output for RTTTL
# rtttl:
#   output: buzzer

# # Configure LED
# light:
# - platform: fastled_clockless
#   chipset: WS2812
#   pin: D8
#   default_transition_length: 10ms
#   num_leds: 1
#   rgb_order: GRB
#   id: activity_led
#   name: "${devname} LED"
#   restore_mode: ALWAYS_OFF
